generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model boroughs {
  id   Int     @id @default(autoincrement()) @db.UnsignedInt
  name String? @db.VarChar(256)
}

model contribution_replies {
  id              Int           @id @default(autoincrement()) @db.UnsignedInt
  user_id         String        @db.VarChar(256)
  name            String?       @db.VarChar(256)
  contribution_id Int           @db.UnsignedInt
  message         String?       @db.Text
  created_at      DateTime?     @default(now()) @db.DateTime(0)
  is_deleted      Int?          @default(0) @db.TinyInt
  contributions   contributions @relation(fields: [contribution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "contribution_reply")
  users           users         @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "reply_user")

  @@index([contribution_id], map: "contribution_reply")
  @@index([user_id], map: "reply_user")
}

model contribution_votes {
  id              Int           @id @default(autoincrement()) @db.UnsignedInt
  contribution_id Int           @db.UnsignedInt
  user_id         String        @db.VarChar(256)
  score           Int?
  created_at      DateTime?     @default(now()) @db.DateTime(0)
  contributions   contributions @relation(fields: [contribution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "contribution_vote")
  users           users         @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "vote_user")

  @@index([contribution_id], map: "contribution_vote")
  @@index([user_id], map: "vote_user")
}

model contributions {
  id                   Int                    @id @default(autoincrement()) @db.UnsignedInt
  created_at           DateTime?              @db.DateTime(0)
  issue_id             Int?                   @db.UnsignedInt
  comment              String?                @db.Text
  photo_path           String?                @db.VarChar(256)
  photo_width          Int?                   @db.UnsignedInt
  photo_height         Int?                   @db.UnsignedInt
  location             String?                @db.Text
  user_id              String                 @db.VarChar(256)
  name                 String?                @db.VarChar(256)
  quality              Int?
  is_deleted           Int?                   @default(0) @db.TinyInt
  contribution_replies contribution_replies[]
  contribution_votes   contribution_votes[]
  users                users                  @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "contribution_author")

  @@index([user_id], map: "contribution_author")
}

model troncons {
  id                     Int       @id @default(autoincrement()) @db.UnsignedInt
  id_trc                 Int?
  id2020                 Int?
  borough_id             Int?
  type                   Int?      @db.TinyInt
  length                 Float?    @db.Float
  id_cycl                Int?
  type2                  Int?
  nb_lanes               Int?
  splitter               String?   @db.VarChar(10)
  four_seasons           Int?      @db.TinyInt
  protected_four_seasons Int?      @db.TinyInt
  street_side_one_state  Int?      @default(0)
  street_side_two_state  Int?      @default(0)
  updated_at             DateTime? @default(now()) @db.DateTime(0)
  troncon_lines          String?   @db.Text

  @@index([id_trc], map: "trc_id")
}

model users {
  // id                   Int?                   @default(autoincrement()) @db.UnsignedInt
  user_id              String                 @id @unique @db.VarChar(256)
  token                String?                @db.VarChar(256)
  rq_ip                String?                @db.VarChar(256)
  contribution_replies contribution_replies[]
  contribution_votes   contribution_votes[]
  contributions        contributions[]
}
